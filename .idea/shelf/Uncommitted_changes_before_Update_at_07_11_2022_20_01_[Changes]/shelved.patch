Index: project/src/main/java/controller/inputController.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package controller;\r\n\r\nimport DAO.Sinalizacao.UltrapassagemDAO;\r\nimport DAO.Sinalizacao.VelocidadeMaximaDAO;\r\nimport DAO.TipoAcidente.TipoAcidenteDAO;\r\nimport DAO.TipoOcorrencia.TipoOcorrenciaDAO;\r\nimport lombok.Getter;\r\nimport lombok.Setter;\r\nimport model.*;\r\nimport DAO.Acidente.AcidenteDAO;\r\nimport org.primefaces.model.file.UploadedFile;\r\n\r\nimport javax.faces.application.FacesMessage;\r\nimport javax.faces.context.FacesContext;\r\nimport javax.faces.view.ViewScoped;\r\nimport javax.inject.Inject;\r\nimport javax.inject.Named;\r\nimport javax.validation.constraints.Null;\r\nimport java.io.*;\r\nimport java.sql.SQLException;\r\nimport java.sql.Time;\r\nimport java.text.ParseException;\r\nimport java.text.SimpleDateFormat;\r\nimport java.util.ArrayList;\r\nimport java.util.Date;\r\nimport java.util.List;\r\n\r\nimport static java.lang.Integer.parseInt;\r\n\r\n@Named\r\n@ViewScoped\r\npublic class inputController implements Serializable {\r\n\r\n  @Getter @Setter\r\n  private UploadedFile file;\r\n  @Getter @Setter\r\n  private String type;\r\n  @Getter @Setter\r\n  private ArrayList<String> typeList;\r\n\r\n  public void init(){\r\n    createTypeList();\r\n  }\r\n\r\n  public List<String> createTypeList(){\r\n    typeList = new ArrayList<>();\r\n\r\n    typeList.add(\"Acidente\");\r\n    typeList.add(\"Ultrapassagem\");\r\n    typeList.add(\"Velocidade Máxima\");\r\n\r\n    return typeList;\r\n  }\r\n\r\n  public void verificarArquivo(){\r\n\r\n  }\r\n\r\n  public void readUploadAcidente(){\r\n    try {\r\n      BufferedReader br = new BufferedReader(new FileReader(file.getFileName()));\r\n      String line = br.readLine(); // pega o cabeçalho\r\n      line = br.readLine();   // primeira linha com conteúdo\r\n      while(line != null){\r\n        String[] info = line.split(\";\");\r\n\r\n        // Data\r\n        String dataInput = info[0];\r\n        SimpleDateFormat parser = new SimpleDateFormat();\r\n        Date data = parser.parse(dataInput);\r\n        // Horário\r\n        Time hora = new Time(new SimpleDateFormat(\"HH:mm:ss\").parse(info[1]).getTime());\r\n        // Numero da ocorrencia\r\n        Integer nrOcorrencia = parseInt(info[2]);\r\n        // Tipo de ocorrencia *nova tabela\r\n        String descricaoTipoOcorrencia = info[3];\r\n        // Km\r\n        Float km = Float.parseFloat(info[4]);\r\n        // Trecho Rodovia *nova tabela\r\n        String descricaoTrechoRodovia = info[5];\r\n        // Sentido Rodovia *nova tabela\r\n        String descricaoSentidoRodovia = info[6];\r\n        // Tipo de acidente *nova tabela\r\n        String descricaoTipoAcidente = info[7];\r\n        // Automovel\r\n        int automovel = parseInt(info[8]);\r\n        // Bicicleta\r\n        int bicicleta = parseInt(info[9]);\r\n        // Caminhao\r\n        int caminhao = parseInt(info[10]);\r\n        // Moto\r\n        int moto = parseInt(info[11]);\r\n        // Onibus\r\n        int onibus = parseInt(info[12]);\r\n        // Outros\r\n        int outros = parseInt(info[13]);\r\n        // Tracao animal\r\n        int tracaoAnimal = parseInt(info[14]);\r\n        // Transporte de cargas especiais\r\n        int cargaEspecial = parseInt(info[15]);\r\n        // Trator Maquina\r\n        int tratorMaquina = parseInt(info[16]);\r\n        // Utilitario\r\n        int utilitario = parseInt(info[17]);\r\n        // Ileso\r\n        int ileso = parseInt(info[18]);\r\n        // Levemente Ferido\r\n        int levementeFerido = parseInt(info[19]);\r\n        // Moderamente Ferido *não utilizado\r\n        int moderamenteFerido = parseInt(info[20]);\r\n        // Gravemente Ferido\r\n        int gravementeFerido = parseInt(info[21]);\r\n        // Mortos\r\n        int mortos = parseInt(info[22]);\r\n\r\n        Acidente acidente = new Acidente();\r\n        acidente.setData((java.sql.Date) data);\r\n        acidente.setHora(hora);\r\n        acidente.setNrOcorrencia(nrOcorrencia);\r\n        acidente.setKm(km);\r\n        acidente.setAutomovel(automovel);\r\n        acidente.setBicicleta(bicicleta);\r\n        acidente.setCaminhao(caminhao);\r\n        acidente.setMoto(moto);\r\n        acidente.setOnibus(onibus);\r\n        acidente.setOutros(outros);\r\n        acidente.setTracaoAnimal(tracaoAnimal);\r\n        acidente.setCargaEspecial(cargaEspecial);\r\n        acidente.setTratorMaquina(tratorMaquina);\r\n        acidente.setUtilitario(utilitario);\r\n        acidente.setIleso(ileso);\r\n        acidente.setLevementeFerido(levementeFerido);\r\n        acidente.setGravementeFerido(gravementeFerido);\r\n        acidente.setMortos(mortos);\r\n        // TODO criar funções verificarIn*'s\r\n        TrechoRodovia trechoRodovia = new TrechoRodovia();\r\n        trechoRodovia.setDescricaoTrechoRodovia(descricaoTrechoRodovia);\r\n\r\n        SentidoRodovia sentidoRodovia = new SentidoRodovia();\r\n        sentidoRodovia.setDescricaoSentidoRodovia(descricaoSentidoRodovia);\r\n\r\n        acidente.setIdTrechoRodovia(trechoRodovia.getIdTrechoRodovia());\r\n\r\n        TipoOcorrencia tipoOcorrencia = new TipoOcorrencia();\r\n        tipoOcorrencia.setDescricaoTipoOcorrencia(descricaoTipoOcorrencia);\r\n\r\n        TipoAcidente tipoAcidente = new TipoAcidente();\r\n        tipoAcidente.setDescricaoTipoAcidente(descricaoTipoAcidente);\r\n\r\n        if(data != null && hora != null && nrOcorrencia != null && descricaoTipoOcorrencia != null && km != null && descricaoTrechoRodovia != null && descricaoSentidoRodovia != null && descricaoTipoAcidente != null){\r\n          // TODO implementação dos outros\r\n          AcidenteDAO.adicionarAcidente(acidente);\r\n          //TipoAcidenteDAO.adicionarTipoAcidente(tipoAcidente);\r\n          //TipoOcorrenciaDAO.adicionarTipoOcorrencia(tipoOcorrencia);\r\n        }\r\n\r\n        line = br.readLine();\r\n      }\r\n    } catch (FileNotFoundException e) {\r\n      throw new RuntimeException(e);\r\n    } catch (IOException e) {\r\n      throw new RuntimeException(e);\r\n    } catch (ParseException | SQLException e) {\r\n      throw new RuntimeException(e);\r\n    }\r\n  }\r\n\r\n  public void readUploadUltrapassagem(){\r\n    try{\r\n      BufferedReader br = new BufferedReader(new FileReader(file.getFileName()));\r\n      String line = br.readLine(); // pega o cabeçalho\r\n      line = br.readLine();   // primeira linha com conteúdo\r\n      while(line != null) {\r\n        String[] info = line.split(\";\");\r\n\r\n        // Concessionaria\r\n      }\r\n\r\n    } catch (FileNotFoundException e) {\r\n      throw new RuntimeException(e);\r\n    } catch (IOException e) {\r\n      throw new RuntimeException(e);\r\n    }\r\n  }\r\n\r\n  public void upload(){\r\n\r\n    try{\r\n      BufferedReader br = new BufferedReader(new FileReader(file.getFileName()));\r\n      if(file != null){\r\n        FacesMessage message = new FacesMessage(\"Sucesso\", file.getFileName() + \" upload está feito.\");\r\n        FacesContext.getCurrentInstance().addMessage(null, message);\r\n\r\n        if(type.equals(\"Acidente\")){\r\n          readUploadAcidente();\r\n        }\r\n//        else if(type.equals(\"Ultrapassagem\")){\r\n//          readUploadUltrapassagem();\r\n//        }\r\n//        else if(type.equals(\"Velocidade Máxima\")){\r\n//          readUploadVelocidadeMaxima();\r\n//        }\r\n\r\n\r\n\r\n      }\r\n    } catch (FileNotFoundException e) {\r\n      throw new RuntimeException(e);\r\n    }\r\n\r\n  }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project/src/main/java/controller/inputController.java b/project/src/main/java/controller/inputController.java
--- a/project/src/main/java/controller/inputController.java	(revision 12c5fd75ee4d85162708f6111717707d44b3ff7d)
+++ b/project/src/main/java/controller/inputController.java	(date 1667862043788)
@@ -183,7 +183,7 @@
     }
   }
 
-  public void upload(){
+  public void uploadFile(){
 
     try{
       BufferedReader br = new BufferedReader(new FileReader(file.getFileName()));
Index: project/pom.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project xsi:schemaLocation=\"http://maven.apache.org/POM/4.0.0\r\n         https://maven.apache.org/xsd/maven-4.0.0.xsd\"\r\n         xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\r\n         xmlns=\"http://maven.apache.org/POM/4.0.0\">\r\n\r\n    <modelVersion>4.0.0</modelVersion>\r\n    <groupId>com.example</groupId>\r\n    <artifactId>project</artifactId>\r\n    <version>1.0-SNAPSHOT</version>\r\n    <name>project</name>\r\n    <packaging>war</packaging>\r\n\r\n\r\n    <properties>\r\n        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>\r\n        <maven.compiler.target>1.8</maven.compiler.target>\r\n        <maven.compiler.source>1.8</maven.compiler.source>\r\n        <junit.version>5.7.1</junit.version>\r\n    </properties>\r\n\r\n\r\n    <dependencies>\r\n        <dependency>\r\n            <groupId>javax.enterprise</groupId>\r\n            <artifactId>cdi-api</artifactId>\r\n            <version>2.0</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>javax.annotation</groupId>\r\n            <artifactId>javax.annotation-api</artifactId>\r\n            <version>1.3.2</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>javax.inject</groupId>\r\n            <artifactId>javax.inject</artifactId>\r\n            <version>1</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>javax.faces</groupId>\r\n            <artifactId>javax.faces-api</artifactId>\r\n            <version>2.3</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>javax.servlet</groupId>\r\n            <artifactId>javax.servlet-api</artifactId>\r\n            <version>4.0.1</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter-api</artifactId>\r\n            <version>${junit.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.junit.jupiter</groupId>\r\n            <artifactId>junit-jupiter-engine</artifactId>\r\n            <version>${junit.version}</version>\r\n            <scope>test</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.primefaces</groupId>\r\n            <artifactId>primefaces</artifactId>\r\n            <version>11.0.0</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.projectlombok</groupId>\r\n            <artifactId>lombok</artifactId>\r\n            <version>1.18.24</version>\r\n            <scope>provided</scope>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>jakarta.validation</groupId>\r\n            <artifactId>jakarta.validation-api</artifactId>\r\n            <version>2.0.2</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.omnifaces</groupId>\r\n            <artifactId>omnifaces</artifactId>\r\n            <version>3.11.1</version>\r\n        </dependency>\r\n\r\n        <dependency>\r\n            <groupId>org.primefaces.themes</groupId>\r\n            <artifactId>all-themes</artifactId>\r\n            <version>1.0.10</version>\r\n        </dependency>\r\n        <dependency>\r\n            <groupId>org.jetbrains</groupId>\r\n            <artifactId>annotations</artifactId>\r\n            <version>RELEASE</version>\r\n            <scope>compile</scope>\r\n        </dependency>\r\n    </dependencies>\r\n\r\n    <build>\r\n\r\n        <plugins>\r\n            <plugin>\r\n                <groupId>org.apache.maven.plugins</groupId>\r\n                <artifactId>maven-war-plugin</artifactId>\r\n                <version>3.3.1</version>\r\n            </plugin>\r\n        </plugins>\r\n    </build>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/project/pom.xml b/project/pom.xml
--- a/project/pom.xml	(revision 12c5fd75ee4d85162708f6111717707d44b3ff7d)
+++ b/project/pom.xml	(date 1667862043798)
@@ -92,11 +92,6 @@
             <version>3.11.1</version>
         </dependency>
 
-        <dependency>
-            <groupId>org.primefaces.themes</groupId>
-            <artifactId>all-themes</artifactId>
-            <version>1.0.10</version>
-        </dependency>
         <dependency>
             <groupId>org.jetbrains</groupId>
             <artifactId>annotations</artifactId>
